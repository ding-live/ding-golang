// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// CheckStatus - The status of the check. Possible values are:
//   - `unknown` - The status is unknown.
//   - `valid` - The code is valid.
//   - `invalid` - The code is invalid.
//   - `without_attempt` - No attempt was sent yet, so a check cannot be completed.
//   - `rate_limited` - The authentication was rate limited and cannot be checked.
//   - `already_validated` - The authentication has already been validated.
//   - `expired_auth` - The authentication has expired and cannot be checked.
type CheckStatus string

const (
	CheckStatusUnknown          CheckStatus = "unknown"
	CheckStatusValid            CheckStatus = "valid"
	CheckStatusInvalid          CheckStatus = "invalid"
	CheckStatusWithoutAttempt   CheckStatus = "without_attempt"
	CheckStatusRateLimited      CheckStatus = "rate_limited"
	CheckStatusAlreadyValidated CheckStatus = "already_validated"
	CheckStatusExpiredAuth      CheckStatus = "expired_auth"
)

func (e CheckStatus) ToPointer() *CheckStatus {
	return &e
}
func (e *CheckStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unknown":
		fallthrough
	case "valid":
		fallthrough
	case "invalid":
		fallthrough
	case "without_attempt":
		fallthrough
	case "rate_limited":
		fallthrough
	case "already_validated":
		fallthrough
	case "expired_auth":
		*e = CheckStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckStatus: %v", v)
	}
}
