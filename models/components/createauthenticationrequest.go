// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// DeviceType - The type of device the user is using.
type DeviceType string

const (
	DeviceTypeIos     DeviceType = "IOS"
	DeviceTypeAndroid DeviceType = "ANDROID"
	DeviceTypeWeb     DeviceType = "WEB"
)

func (e DeviceType) ToPointer() *DeviceType {
	return &e
}

func (e *DeviceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IOS":
		fallthrough
	case "ANDROID":
		fallthrough
	case "WEB":
		*e = DeviceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceType: %v", v)
	}
}

type CreateAuthenticationRequest struct {
	// The Android SMS Retriever API hash code that identifies your app. This allows you to automatically retrieve and fill the OTP code on Android devices.
	AppRealm *string `json:"app_realm,omitempty"`
	// The version of your application.
	AppVersion *string `json:"app_version,omitempty"`
	// A webhook URL to which delivery statuses will be sent.
	CallbackURL *string `json:"callback_url,omitempty"`
	// Your customer UUID, which can be found in the API settings in the dashboard.
	CustomerUUID string `json:"customer_uuid"`
	// Unique identifier for the user's device. For Android, this corresponds to the `ANDROID_ID` and for iOS, this corresponds to the `identifierForVendor`.
	DeviceID *string `json:"device_id,omitempty"`
	// The model of the user's device.
	DeviceModel *string `json:"device_model,omitempty"`
	// The type of device the user is using.
	DeviceType *DeviceType `json:"device_type,omitempty"`
	// The IP address of the user's device.
	IP *string `json:"ip,omitempty"`
	// Whether the user is a returning user on your app.
	IsReturningUser *bool `json:"is_returning_user,omitempty"`
	// The version of the user's device operating system.
	OsVersion *string `json:"os_version,omitempty"`
	// An E.164 formatted phone number to send the OTP to.
	PhoneNumber string `json:"phone_number"`
	// The template id associated with the message content variant to be sent.
	TemplateID *string `json:"template_id,omitempty"`
}

func (o *CreateAuthenticationRequest) GetAppRealm() *string {
	if o == nil {
		return nil
	}
	return o.AppRealm
}

func (o *CreateAuthenticationRequest) GetAppVersion() *string {
	if o == nil {
		return nil
	}
	return o.AppVersion
}

func (o *CreateAuthenticationRequest) GetCallbackURL() *string {
	if o == nil {
		return nil
	}
	return o.CallbackURL
}

func (o *CreateAuthenticationRequest) GetCustomerUUID() string {
	if o == nil {
		return ""
	}
	return o.CustomerUUID
}

func (o *CreateAuthenticationRequest) GetDeviceID() *string {
	if o == nil {
		return nil
	}
	return o.DeviceID
}

func (o *CreateAuthenticationRequest) GetDeviceModel() *string {
	if o == nil {
		return nil
	}
	return o.DeviceModel
}

func (o *CreateAuthenticationRequest) GetDeviceType() *DeviceType {
	if o == nil {
		return nil
	}
	return o.DeviceType
}

func (o *CreateAuthenticationRequest) GetIP() *string {
	if o == nil {
		return nil
	}
	return o.IP
}

func (o *CreateAuthenticationRequest) GetIsReturningUser() *bool {
	if o == nil {
		return nil
	}
	return o.IsReturningUser
}

func (o *CreateAuthenticationRequest) GetOsVersion() *string {
	if o == nil {
		return nil
	}
	return o.OsVersion
}

func (o *CreateAuthenticationRequest) GetPhoneNumber() string {
	if o == nil {
		return ""
	}
	return o.PhoneNumber
}

func (o *CreateAuthenticationRequest) GetTemplateID() *string {
	if o == nil {
		return nil
	}
	return o.TemplateID
}
